{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { DrawerNavigator } from \"./navigation/DrawerNavigator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport RootStackNavigator from \"./navigation/RootStackNavigator\";\nimport { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AuthContext } from \"./components/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userToken = _React$useState4[0],\n      setUserToken = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      userData = _React$useState6[0],\n      setUserData = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"http://223.16.12.55:3000\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      APIServiceURL = _React$useState8[0],\n      setAPIServiceURL = _React$useState8[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      getAPIServiceURL: function getAPIServiceURL() {\n        return APIServiceURL;\n      },\n      signIn: function signIn(UserToken, UserData) {\n        setUserToken(UserToken);\n        setUserData(UserData);\n        setIsLoading(false);\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setUserData({});\n        setIsLoading(true);\n        setTimeout(function () {\n          setIsLoading(false);\n        }, 500);\n      },\n      signUp: function signUp(UserToken, UserData) {\n        setUserToken(UserToken);\n        setUserData(UserData);\n        setIsLoading(false);\n      },\n      getUserToken: function getUserToken() {\n        return userToken;\n      },\n      getUserData: function getUserData() {\n        return userData;\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1500);\n  }, []);\n\n  if (isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0000ff\"\n      })\n    });\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsx(NavigationContainer, {\n      children: userToken === undefined || userToken === null ? _jsx(RootStackNavigator, {}) : _jsx(DrawerNavigator, {})\n    })\n  });\n}","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/App.js"],"names":["React","DrawerNavigator","NavigationContainer","RootStackNavigator","useEffect","useState","AuthContext","App","isLoading","setIsLoading","userToken","setUserToken","userData","setUserData","APIServiceURL","setAPIServiceURL","authContext","useMemo","getAPIServiceURL","signIn","UserToken","UserData","signOut","setTimeout","signUp","getUserToken","getUserData","flex","justifyContent","alignItems","undefined"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,eAAT;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,kBAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;AAQA,SAASC,WAAT;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,wBAAkCP,KAAK,CAACK,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAkCT,KAAK,CAACK,QAAN,EAAlC;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAgCX,KAAK,CAACK,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAA0Cb,KAAK,CAACK,QAAN,CACtC,0BADsC,CAA1C;AAAA;AAAA,MAAOS,aAAP;AAAA,MAAsBC,gBAAtB;;AAIA,MAAMC,WAAW,GAAGhB,KAAK,CAACiB,OAAN,CAAc;AAAA,WAAO;AACrCC,MAAAA,gBAAgB,EAAE,4BAAM;AACpB,eAAOJ,aAAP;AACH,OAHoC;AAIrCK,MAAAA,MAAM,EAAE,gBAACC,SAAD,EAAYC,QAAZ,EAAyB;AAC7BV,QAAAA,YAAY,CAACS,SAAD,CAAZ;AACAP,QAAAA,WAAW,CAACQ,QAAD,CAAX;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OARoC;AASrCa,MAAAA,OAAO,EAAE,mBAAM;AACXX,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAc,QAAAA,UAAU,CAAC,YAAM;AACbd,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAhBoC;AAiBrCe,MAAAA,MAAM,EAAE,gBAACJ,SAAD,EAAYC,QAAZ,EAAyB;AAC7BV,QAAAA,YAAY,CAACS,SAAD,CAAZ;AACAP,QAAAA,WAAW,CAACQ,QAAD,CAAX;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OArBoC;AAsBrCgB,MAAAA,YAAY,EAAE,wBAAM;AAChB,eAAOf,SAAP;AACH,OAxBoC;AAyBrCgB,MAAAA,WAAW,EAAE,uBAAM;AACf,eAAOd,QAAP;AACH;AA3BoC,KAAP;AAAA,GAAd,CAApB;AA8BAR,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,UAAU,CAAC,YAAM;AACbd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAID,SAAJ,EAAe;AACX,WACI,KAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHmB,QAAAA,IAAI,EAAE,CADH;AAEHC,QAAAA,cAAc,EAAE,QAFb;AAGHC,QAAAA,UAAU,EAAE;AAHT,OADX;AAAA,gBAOI,KAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAC;AAAtC;AAPJ,MADJ;AAWH;;AACD,SACI,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEb,WAA7B;AAAA,cACI,KAAC,mBAAD;AAAA,gBACKN,SAAS,KAAKoB,SAAd,IAA2BpB,SAAS,KAAK,IAAzC,GACG,KAAC,kBAAD,KADH,GAGG,KAAC,eAAD;AAJR;AADJ,IADJ;AAWH","sourcesContent":["import * as React from \"react\";\n// import BottomTabNavigator from \"./navigation/TabNavigator\";\nimport { DrawerNavigator } from \"./navigation/DrawerNavigator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport RootStackNavigator from \"./navigation/RootStackNavigator\";\nimport { useEffect, useState } from \"react\";\nimport {\n    ActivityIndicator,\n    StyleSheet,\n    View,\n    Text,\n    TouchableOpacity,\n} from \"react-native\";\nimport { AuthContext } from \"./components/context\";\n\nexport default function App() {\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [userToken, setUserToken] = React.useState();\n    const [userData, setUserData] = React.useState({});\n    const [APIServiceURL, setAPIServiceURL] = React.useState(\n        \"http://223.16.12.55:3000\"\n    );\n\n    const authContext = React.useMemo(() => ({\n        getAPIServiceURL: () => {\n            return APIServiceURL;\n        },\n        signIn: (UserToken, UserData) => {\n            setUserToken(UserToken);\n            setUserData(UserData);\n            setIsLoading(false);\n        },\n        signOut: () => {\n            setUserToken(null);\n            setUserData({});\n            setIsLoading(true);\n            setTimeout(() => {\n                setIsLoading(false);\n            }, 500);\n        },\n        signUp: (UserToken, UserData) => {\n            setUserToken(UserToken);\n            setUserData(UserData);\n            setIsLoading(false);\n        },\n        getUserToken: () => {\n            return userToken;\n        },\n        getUserData: () => {\n            return userData;\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 1500);\n    }, []);\n\n    if (isLoading) {\n        return (\n            <View\n                style={{\n                    flex: 1,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n            </View>\n        );\n    }\n    return (\n        <AuthContext.Provider value={authContext}>\n            <NavigationContainer>\n                {userToken === undefined || userToken === null ? (\n                    <RootStackNavigator />\n                ) : (\n                    <DrawerNavigator />\n                )}\n            </NavigationContainer>\n        </AuthContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}