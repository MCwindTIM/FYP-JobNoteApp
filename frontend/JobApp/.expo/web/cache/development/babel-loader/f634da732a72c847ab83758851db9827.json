{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { AuthContext } from \"../../components/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NoteDetailsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      getJobRedirect = _React$useContext.getJobRedirect,\n      getAPIServiceURL = _React$useContext.getAPIServiceURL,\n      getUserToken = _React$useContext.getUserToken,\n      setJob = _React$useContext.setJob;\n\n  var Note_ID = route.params._id;\n  var _route$params = route.params,\n      Job = _route$params.Job,\n      Note = _route$params.Note;\n  var APIServiceURL = getAPIServiceURL();\n  useEffect(function () {\n    if (Job) {\n      navigation.setOptions({\n        title: decodeURIComponent(Job.Title)\n      });\n    }\n  });\n\n  var confirmPopUp = function confirmPopUp() {\n    Alert.alert(\"Deleting Note\", \"Are you sure?\", [{\n      text: \"Cancel\"\n    }, {\n      text: \"I'm sure\",\n      onPress: function onPress() {\n        deleteNote();\n      }\n    }]);\n  };\n\n  var deleteNote = function deleteNote() {\n    fetch(APIServiceURL + \"/deleteNote\", {\n      headers: {\n        note_id: Note_ID ? Note_ID : Note._id\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        response.json().then(function (json) {\n          if (json.success) {\n            navigation.navigate(\"Notes List\");\n            ToastAndroid.show(\"Successfully Deleted\", ToastAndroid.SHORT);\n          } else {\n            Alert.alert(\"Error\", json.message);\n          }\n        });\n      } else {\n        Alert.alert(\"Error\", \"Server currently not available, Please check your connection.\");\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(ScrollView, {\n      children: [Job ? _jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"\" + decodeURIComponent(Job.Title)\n      }) : null, Job ? _jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Job Provider: \" + decodeURIComponent(Job.Author)\n      }) : null, Job ? _jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        children: \"\" + decodeURIComponent(Job.Details)\n      }) : null, Job ? _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: \"black\"\n          }\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              width: 50,\n              textAlign: \"center\"\n            },\n            children: \"Note\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: \"black\"\n          }\n        })]\n      }) : null, _jsx(Text, {\n        style: {\n          fontSize: 16\n        },\n        children: \"\" + (Note.Note ? decodeURIComponent(Note.Note) : decodeURIComponent(Note))\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: \"black\"\n          }\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              width: 70,\n              textAlign: \"center\"\n            },\n            children: \"Note End\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: \"black\"\n          }\n        })]\n      }), _jsx(Pressable, {\n        style: styles.delButton,\n        onPress: function onPress() {\n          confirmPopUp();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"#406E9F\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  delButton: {\n    margin: 1,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"red\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  forwardsButton: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"green\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  emailButton: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"purple\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/navigation/screens/NoteDetailsScreen.js"],"names":["React","useEffect","AuthContext","NoteDetailsScreen","route","navigation","useContext","getJobRedirect","getAPIServiceURL","getUserToken","setJob","Note_ID","params","_id","Job","Note","APIServiceURL","setOptions","title","decodeURIComponent","Title","confirmPopUp","Alert","alert","text","onPress","deleteNote","fetch","headers","note_id","then","response","status","json","success","navigate","ToastAndroid","show","SHORT","message","fontSize","fontWeight","textAlign","Author","Details","flexDirection","alignItems","flex","height","backgroundColor","width","styles","delButton","buttonText","StyleSheet","create","center","justifyContent","button","margin","padding","paddingLeft","paddingRight","borderRadius","color","forwardsButton","emailButton","buttonView","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n    Text,\r\n    StyleSheet,\r\n    View,\r\n    SafeAreaView,\r\n    ScrollView,\r\n    Pressable,\r\n    Alert,\r\n    ToastAndroid,\r\n} from \"react-native\";\r\n\r\nimport { AuthContext } from \"../../components/context\";\r\n\r\nexport default function NoteDetailsScreen({ route, navigation }) {\r\n    const { getJobRedirect, getAPIServiceURL, getUserToken, setJob } =\r\n        React.useContext(AuthContext);\r\n    const Note_ID = route.params._id;\r\n    const { Job, Note } = route.params;\r\n    const APIServiceURL = getAPIServiceURL();\r\n    useEffect(() => {\r\n        if (Job) {\r\n            navigation.setOptions({\r\n                title: decodeURIComponent(Job.Title),\r\n            });\r\n        }\r\n    });\r\n\r\n    const confirmPopUp = () => {\r\n        Alert.alert(\"Deleting Note\", \"Are you sure?\", [\r\n            {\r\n                text: \"Cancel\",\r\n            },\r\n            {\r\n                text: \"I'm sure\",\r\n                onPress: () => {\r\n                    deleteNote();\r\n                },\r\n            },\r\n        ]);\r\n    };\r\n    const deleteNote = () => {\r\n        fetch(`${APIServiceURL}/deleteNote`, {\r\n            headers: {\r\n                note_id: Note_ID ? Note_ID : Note._id,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((json) => {\r\n                    if (json.success) {\r\n                        navigation.navigate(\"Notes List\");\r\n                        ToastAndroid.show(\r\n                            \"Successfully Deleted\",\r\n                            ToastAndroid.SHORT\r\n                        );\r\n                    } else {\r\n                        Alert.alert(\"Error\", json.message);\r\n                    }\r\n                });\r\n            } else {\r\n                Alert.alert(\r\n                    \"Error\",\r\n                    \"Server currently not available, Please check your connection.\"\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                {Job ? (\r\n                    <Text\r\n                        style={{\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {`${decodeURIComponent(Job.Title)}`}\r\n                    </Text>\r\n                ) : null}\r\n                {Job ? (\r\n                    <Text\r\n                        style={{\r\n                            fontSize: 16,\r\n                            fontWeight: \"bold\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {`Job Provider: ${decodeURIComponent(Job.Author)}`}\r\n                    </Text>\r\n                ) : null}\r\n                {Job ? (\r\n                    <Text\r\n                        style={{\r\n                            fontSize: 20,\r\n                            fontWeight: \"bold\",\r\n                        }}\r\n                    >\r\n                        {`${decodeURIComponent(Job.Details)}`}\r\n                    </Text>\r\n                ) : null}\r\n                {Job ? (\r\n                    <View\r\n                        style={{ flexDirection: \"row\", alignItems: \"center\" }}\r\n                    >\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                height: 1,\r\n                                backgroundColor: \"black\",\r\n                            }}\r\n                        />\r\n                        <View>\r\n                            <Text style={{ width: 50, textAlign: \"center\" }}>\r\n                                Note\r\n                            </Text>\r\n                        </View>\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                height: 1,\r\n                                backgroundColor: \"black\",\r\n                            }}\r\n                        />\r\n                    </View>\r\n                ) : null}\r\n                <Text style={{ fontSize: 16 }}>\r\n                    {`${\r\n                        Note.Note\r\n                            ? decodeURIComponent(Note.Note)\r\n                            : decodeURIComponent(Note)\r\n                    }`}\r\n                </Text>\r\n                <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                        style={{ flex: 1, height: 1, backgroundColor: \"black\" }}\r\n                    />\r\n                    <View>\r\n                        <Text style={{ width: 70, textAlign: \"center\" }}>\r\n                            Note End\r\n                        </Text>\r\n                    </View>\r\n                    <View\r\n                        style={{ flex: 1, height: 1, backgroundColor: \"black\" }}\r\n                    />\r\n                </View>\r\n                <Pressable\r\n                    style={styles.delButton}\r\n                    onPress={() => {\r\n                        confirmPopUp();\r\n                    }}\r\n                >\r\n                    <Text style={styles.buttonText}>🗑️</Text>\r\n                </Pressable>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\n//#NOTE: sample route.params object\r\n// Object {\r\n// \"Job\": Object {\r\n//   \"Author\": \"Cheungwaiyin\",\r\n//   \"AuthorID\": \"61d2c4e2cddf3454f88c77d2\",\r\n//   \"Details\": \"Abc\",\r\n//   \"Title\": \"Abc\",\r\n//   \"_id\": \"61d2ccb34fecc0b50fc085ff\",\r\n// },\r\n// \"Note\": Object {\r\n//   \"Author\": Object {\r\n// \"UserToken\": \"nrkjkkcv2dmksl45cw9uw\",\r\n// \"_id\": \"61d2b58fcddf3454f88c77d1\",\r\n// \"email\": \"pw860563576@gmail.com\",\r\n// \"password\": \"!Zz860563576\",\r\n// \"username\": \"pw860563576\",\r\n//   },\r\n//   \"Job_id\": \"61d2ccb34fecc0b50fc085ff\",\r\n//   \"Note\": \"7\",\r\n//   \"_id\": \"61d43d961028f772796f609c\",\r\n// },\r\n//   }\r\n\r\nconst styles = StyleSheet.create({\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"#406E9F\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonText: {\r\n        color: \"#fff\",\r\n        fontSize: 15,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    delButton: {\r\n        margin: 1,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"red\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    forwardsButton: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"green\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    emailButton: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"purple\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonView: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        marginTop: 20,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}