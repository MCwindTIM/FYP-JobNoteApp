{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport AvatarImage from \"./Avatar.js\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChatListItem(_ref) {\n  var id = _ref.id,\n      chatRoomData = _ref.chatRoomData,\n      enterChat = _ref.enterChat;\n  var calcMessageTime = parseInt((Date.now() - chatRoomData.lastMessageTime) / 1000);\n  var day = parseInt(calcMessageTime / 86400);\n  var h = parseInt(calcMessageTime % 86400 / 3600, 10);\n  var m = parseInt(calcMessageTime % 86400 % 3600 / 60, 10);\n  var s = parseInt(calcMessageTime % 86400 % 3600 % 60, 10);\n  var timeString = day ? day === 1 ? day + \" day ago\" : day + \" days ago\" : h ? h === 1 ? h + \" hour ago\" : h + \" hours ago\" : m ? m === 1 ? m + \" minute ago\" : m + \" minutes ago\" : s ? s === 1 ? s + \" second ago\" : s + \" seconds ago\" : \"just now\";\n  return _jsx(ListItem, {\n    bottomDivider: true,\n    onPress: function onPress() {\n      enterChat(chatRoomData);\n    },\n    children: _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"flex-start\"\n      },\n      children: [_jsx(AvatarImage, {\n        size: 40,\n        uri: chatRoomData.targetUser.avatar\n      }), _jsxs(ListItem.Content, {\n        style: {\n          paddingLeft: 10\n        },\n        children: [_jsx(ListItem.Title, {\n          style: {\n            fontWeight: \"800\"\n          },\n          children: chatRoomData.targetUser.username\n        }), _jsx(ListItem.Subtitle, {\n          numberOfLines: 1,\n          ellipsizeMode: \"tail\",\n          children: decodeURIComponent(chatRoomData.lastMessageContent)\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"column\",\n          alignItems: \"flex-end\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 12,\n            color: \"#aaa\"\n          },\n          children: chatRoomData.lastMessageTime === 0 ? \"\" : timeString\n        }), _jsx(AntDesign, {\n          style: {\n            paddingTop: 10\n          },\n          name: \"checkcircle\",\n          size: 15\n        })]\n      })]\n    })\n  }, id);\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/components/ChatListItem.js"],"names":["React","ListItem","Avatar","AvatarImage","AntDesign","ChatListItem","id","chatRoomData","enterChat","calcMessageTime","parseInt","Date","now","lastMessageTime","day","h","m","s","timeString","flexDirection","alignItems","targetUser","avatar","paddingLeft","fontWeight","username","decodeURIComponent","lastMessageContent","fontSize","color","paddingTop","styles","StyleSheet","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,uBAAjC;AACA,OAAOC,WAAP;AAEA,OAAOC,SAAP;;;AAGA,eAAe,SAASC,YAAT,OAAuD;AAAA,MAA/BC,EAA+B,QAA/BA,EAA+B;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAClE,MAAIC,eAAe,GAAGC,QAAQ,CAC1B,CAACC,IAAI,CAACC,GAAL,KAAaL,YAAY,CAACM,eAA3B,IAA8C,IADpB,CAA9B;AAGA,MAAIC,GAAG,GAAGJ,QAAQ,CAACD,eAAe,GAAG,KAAnB,CAAlB;AAEA,MAAIM,CAAC,GAAGL,QAAQ,CAAED,eAAe,GAAG,KAAnB,GAA4B,IAA7B,EAAmC,EAAnC,CAAhB;AACA,MAAIO,CAAC,GAAGN,QAAQ,CAAGD,eAAe,GAAG,KAAnB,GAA4B,IAA7B,GAAqC,EAAtC,EAA0C,EAA1C,CAAhB;AACA,MAAIQ,CAAC,GAAGP,QAAQ,CAAGD,eAAe,GAAG,KAAnB,GAA4B,IAA7B,GAAqC,EAAtC,EAA0C,EAA1C,CAAhB;AAEA,MAAIS,UAAU,GAAGJ,GAAG,GACdA,GAAG,KAAK,CAAR,GACOA,GADP,gBAEOA,GAFP,cADc,GAIdC,CAAC,GACDA,CAAC,KAAK,CAAN,GACOA,CADP,iBAEOA,CAFP,eADC,GAIDC,CAAC,GACDA,CAAC,KAAK,CAAN,GACOA,CADP,mBAEOA,CAFP,iBADC,GAIDC,CAAC,GACDA,CAAC,KAAK,CAAN,GACOA,CADP,mBAEOA,CAFP,iBADC,aAZP;AAkBA,SACI,KAAC,QAAD;AAEI,IAAA,aAAa,MAFjB;AAGI,IAAA,OAAO,EAAE,mBAAM;AACXT,MAAAA,SAAS,CAACD,YAAD,CAAT;AACH,KALL;AAAA,cAOI,MAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHY,QAAAA,aAAa,EAAE,KADZ;AAEHC,QAAAA,UAAU,EAAE;AAFT,OADX;AAAA,iBAMI,KAAC,WAAD;AAAa,QAAA,IAAI,EAAE,EAAnB;AAAuB,QAAA,GAAG,EAAEb,YAAY,CAACc,UAAb,CAAwBC;AAApD,QANJ,EAOI,MAAC,QAAD,CAAU,OAAV;AAAkB,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAzB;AAAA,mBACI,KAAC,QAAD,CAAU,KAAV;AAAgB,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAvB;AAAA,oBACKjB,YAAY,CAACc,UAAb,CAAwBI;AAD7B,UADJ,EAII,KAAC,QAAD,CAAU,QAAV;AAAmB,UAAA,aAAa,EAAE,CAAlC;AAAqC,UAAA,aAAa,EAAC,MAAnD;AAAA,oBACKC,kBAAkB,CAACnB,YAAY,CAACoB,kBAAd;AADvB,UAJJ;AAAA,QAPJ,EAeI,MAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHR,UAAAA,aAAa,EAAE,QADZ;AAEHC,UAAAA,UAAU,EAAE;AAFT,SADX;AAAA,mBAMI,KAAC,IAAD;AACI,UAAA,KAAK,EAAE;AACHQ,YAAAA,QAAQ,EAAE,EADP;AAEHC,YAAAA,KAAK,EAAE;AAFJ,WADX;AAAA,oBAMKtB,YAAY,CAACM,eAAb,KAAiC,CAAjC,GAAqC,EAArC,GAA0CK;AAN/C,UANJ,EAcI,KAAC,SAAD;AACI,UAAA,KAAK,EAAE;AACHY,YAAAA,UAAU,EAAE;AADT,WADX;AAII,UAAA,IAAI,EAAC,aAJT;AAKI,UAAA,IAAI,EAAE;AALV,UAdJ;AAAA,QAfJ;AAAA;AAPJ,KACSxB,EADT,CADJ;AAgDH;AAED,IAAMyB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { ListItem, Avatar } from \"react-native-elements\";\r\nimport AvatarImage from \"./Avatar.js\";\r\n\r\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\r\n\r\n//id = _id = ChatRoomID\r\nexport default function ChatListItem({ id, chatRoomData, enterChat }) {\r\n    let calcMessageTime = parseInt(\r\n        (Date.now() - chatRoomData.lastMessageTime) / 1000\r\n    );\r\n    let day = parseInt(calcMessageTime / 86400);\r\n\r\n    let h = parseInt((calcMessageTime % 86400) / 3600, 10);\r\n    let m = parseInt(((calcMessageTime % 86400) % 3600) / 60, 10);\r\n    let s = parseInt(((calcMessageTime % 86400) % 3600) % 60, 10);\r\n\r\n    let timeString = day\r\n        ? day === 1\r\n            ? `${day} day ago`\r\n            : `${day} days ago`\r\n        : h\r\n        ? h === 1\r\n            ? `${h} hour ago`\r\n            : `${h} hours ago`\r\n        : m\r\n        ? m === 1\r\n            ? `${m} minute ago`\r\n            : `${m} minutes ago`\r\n        : s\r\n        ? s === 1\r\n            ? `${s} second ago`\r\n            : `${s} seconds ago`\r\n        : `just now`;\r\n\r\n    return (\r\n        <ListItem\r\n            key={id}\r\n            bottomDivider\r\n            onPress={() => {\r\n                enterChat(chatRoomData);\r\n            }}\r\n        >\r\n            <View\r\n                style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"flex-start\",\r\n                }}\r\n            >\r\n                <AvatarImage size={40} uri={chatRoomData.targetUser.avatar} />\r\n                <ListItem.Content style={{ paddingLeft: 10 }}>\r\n                    <ListItem.Title style={{ fontWeight: \"800\" }}>\r\n                        {chatRoomData.targetUser.username}\r\n                    </ListItem.Title>\r\n                    <ListItem.Subtitle numberOfLines={1} ellipsizeMode=\"tail\">\r\n                        {decodeURIComponent(chatRoomData.lastMessageContent)}\r\n                    </ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <View\r\n                    style={{\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"flex-end\",\r\n                    }}\r\n                >\r\n                    <Text\r\n                        style={{\r\n                            fontSize: 12,\r\n                            color: \"#aaa\",\r\n                        }}\r\n                    >\r\n                        {chatRoomData.lastMessageTime === 0 ? \"\" : timeString}\r\n                    </Text>\r\n                    <AntDesign\r\n                        style={{\r\n                            paddingTop: 10,\r\n                        }}\r\n                        name=\"checkcircle\"\r\n                        size={15}\r\n                    />\r\n                </View>\r\n            </View>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}