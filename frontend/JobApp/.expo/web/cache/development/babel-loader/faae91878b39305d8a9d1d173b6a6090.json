{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useState } from \"react\";\nimport { HomeStackNavigator, ChatStackNavigator, SettingsStackNavigator } from \"./StackNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar chatName = \"Chat\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\n\nvar BottomTabNavigator = function BottomTabNavigator() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hide = _useState2[0],\n      setHide = _useState2[1];\n\n  var checkFunction = function checkFunction() {\n    return true;\n  };\n\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: homeName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n\n          if (rn === homeName) {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (rn === chatName) {\n            iconName = focused ? \"chatbox-ellipses\" : \"chatbox-ellipses-outline\";\n          } else if (rn === settingsName) {\n            iconName = focused ? \"settings\" : \"settings-outline\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        unmountOnBlur: true\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: homeName,\n      component: HomeStackNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: chatName,\n      component: ChatStackNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: settingsName,\n      component: SettingsStackNavigator,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\n\nexport { BottomTabNavigator };","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/navigation/TabNavigator.js"],"names":["React","createBottomTabNavigator","Ionicons","useState","HomeStackNavigator","ChatStackNavigator","SettingsStackNavigator","homeName","chatName","settingsName","Tab","BottomTabNavigator","hide","setHide","checkFunction","route","tabBarIcon","focused","color","size","iconName","rn","name","unmountOnBlur","headerShown"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,sBAHJ;;;AAOA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,YAAY,GAAG,UAArB;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;;AAEA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,kBAAwBR,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,WAAO,IAAP;AACH,GAFD;;AAGA,SACI,MAAC,GAAD,CAAK,SAAL;AACI,IAAA,gBAAgB,EAAEP,QADtB;AAEI,IAAA,aAAa,EAAE;AAAA,UAAGQ,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACtC,cAAIC,QAAJ;AACA,cAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AACA,cAAID,EAAE,KAAKd,QAAX,EAAqB;AACjBa,YAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACH,WAFD,MAEO,IAAII,EAAE,KAAKb,QAAX,EAAqB;AACxBY,YAAAA,QAAQ,GAAGH,OAAO,GACZ,kBADY,GAEZ,0BAFN;AAGH,WAJM,MAIA,IAAII,EAAE,KAAKZ,YAAX,EAAyB;AAC5BW,YAAAA,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,kBAAlC;AACH;;AAED,iBACI,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YADJ;AAGH,SAjB0B;AAkB3BK,QAAAA,aAAa,EAAE;AAlBY,OAAhB;AAAA,KAFnB;AAAA,eAuBI,KAAC,GAAD,CAAK,MAAL;AACI,MAAA,IAAI,EAAEhB,QADV;AAEI,MAAA,SAAS,EAAEH,kBAFf;AAGI,MAAA,OAAO,EAAE;AAAEoB,QAAAA,WAAW,EAAE;AAAf;AAHb,MAvBJ,EA4BI,KAAC,GAAD,CAAK,MAAL;AACI,MAAA,IAAI,EAAEhB,QADV;AAEI,MAAA,SAAS,EAAEH,kBAFf;AAGI,MAAA,OAAO,EAAE;AAAEmB,QAAAA,WAAW,EAAE;AAAf;AAHb,MA5BJ,EAiCI,KAAC,GAAD,CAAK,MAAL;AACI,MAAA,IAAI,EAAEf,YADV;AAEI,MAAA,SAAS,EAAEH,sBAFf;AAGI,MAAA,OAAO,EAAE;AAAEkB,QAAAA,WAAW,EAAE;AAAf;AAHb,MAjCJ;AAAA,IADJ;AAyCH,CA9CD;;AAgDA,SAASb,kBAAT","sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n    HomeStackNavigator,\r\n    ChatStackNavigator,\r\n    SettingsStackNavigator,\r\n} from \"./StackNavigator\";\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst chatName = \"Chat\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n    const [hide, setHide] = useState(false);\r\n    const checkFunction = () => {\r\n        return true;\r\n    };\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName={homeName}\r\n            screenOptions={({ route }) => ({\r\n                tabBarIcon: ({ focused, color, size }) => {\r\n                    let iconName;\r\n                    let rn = route.name;\r\n                    if (rn === homeName) {\r\n                        iconName = focused ? \"home\" : \"home-outline\";\r\n                    } else if (rn === chatName) {\r\n                        iconName = focused\r\n                            ? \"chatbox-ellipses\"\r\n                            : \"chatbox-ellipses-outline\";\r\n                    } else if (rn === settingsName) {\r\n                        iconName = focused ? \"settings\" : \"settings-outline\";\r\n                    }\r\n\r\n                    return (\r\n                        <Ionicons name={iconName} size={size} color={color} />\r\n                    );\r\n                },\r\n                unmountOnBlur: true,\r\n            })}\r\n        >\r\n            <Tab.Screen\r\n                name={homeName}\r\n                component={HomeStackNavigator}\r\n                options={{ headerShown: false }}\r\n            />\r\n            <Tab.Screen\r\n                name={chatName}\r\n                component={ChatStackNavigator}\r\n                options={{ headerShown: false }}\r\n            />\r\n            <Tab.Screen\r\n                name={settingsName}\r\n                component={SettingsStackNavigator}\r\n                options={{ headerShown: false }}\r\n            />\r\n        </Tab.Navigator>\r\n    );\r\n};\r\n\r\nexport { BottomTabNavigator };\r\n"]},"metadata":{},"sourceType":"module"}