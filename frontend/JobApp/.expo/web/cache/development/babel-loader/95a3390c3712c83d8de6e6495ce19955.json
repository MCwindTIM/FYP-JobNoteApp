{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Toast from \"react-native-simple-toast\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { AuthContext } from \"../../components/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function JobDetails(item) {\n  var navigation = useNavigation();\n\n  var _React$useContext = React.useContext(AuthContext),\n      getUserToken = _React$useContext.getUserToken,\n      getUserData = _React$useContext.getUserData,\n      getAPIServiceURL = _React$useContext.getAPIServiceURL;\n\n  var UserToken = getUserToken();\n  var UserData = getUserData();\n  var APIServiceURL = getAPIServiceURL();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDelButton = _useState2[0],\n      setShowDelButton = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      followingCurrentJob = _useState4[0],\n      setFollowingCurrentJob = _useState4[1];\n\n  var fetching = false;\n  var job = item.route.params;\n\n  var FollowingJob = function FollowingJob() {\n    if (fetching) {\n      return;\n    }\n\n    fetching = true;\n\n    if (followingCurrentJob) {\n      fetch(APIServiceURL + \"/unfollowJob\", {\n        headers: {\n          user_id: UserData._id,\n          job_id: job._id\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          response.json().then(function (json) {\n            if (json.success) {\n              setFollowingCurrentJob(false);\n              Toast.show(\"Unfollowed!\", Toast.SHORT);\n            } else {\n              console.log(\"failed!\");\n            }\n          });\n        }\n      }).finally(function () {\n        fetching = false;\n      });\n    } else {\n      fetching = true;\n      fetch(APIServiceURL + \"/followJob\", {\n        headers: {\n          user_id: UserData._id,\n          job_id: job._id\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          response.json().then(function (json) {\n            if (json.success) {\n              setFollowingCurrentJob(true);\n              Toast.show(\"Followed!\", Toast.SHORT);\n            } else {\n              console.log(\"failed!\");\n            }\n          });\n        }\n      }).finally(function () {\n        fetching = false;\n      });\n    }\n  };\n\n  var checkFollowing = function checkFollowing() {\n    return _regeneratorRuntime.async(function checkFollowing$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetching = true;\n            fetch(APIServiceURL + \"/checkFollowing\", {\n              headers: {\n                user_id: UserData._id,\n                job_id: job._id\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                response.json().then(function (json) {\n                  if (json.success) {\n                    setFollowingCurrentJob(true);\n                  } else {\n                    setFollowingCurrentJob(false);\n                  }\n                });\n              } else {\n                setFollowingCurrentJob(false);\n              }\n            }).finally(function () {\n              fetching = false;\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    var User;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(JobAuthor(UserToken));\n\n          case 2:\n            User = _context2.sent;\n\n            if (User === job.Author) {\n              setShowDelButton(true);\n            }\n\n            checkFollowing();\n            navigation.setOptions({\n              title: decodeURIComponent(decodeURIComponent(job.Title)),\n              headerRight: function headerRight() {\n                return _jsx(FollowingIconButton, {\n                  navigation: navigation\n                });\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  var getJobAuthorEmailByAuthorID = function getJobAuthorEmailByAuthorID(author_id) {\n    return _regeneratorRuntime.async(function getJobAuthorEmailByAuthorID$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fetch(APIServiceURL + \"/getJobAuthorEmail\", {\n                headers: {\n                  author_id: author_id\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  response.json().then(function (json) {\n                    if (json.success) {\n                      resolve(json.email);\n                    } else {\n                      reject(json.success);\n                    }\n                  });\n                } else {\n                  reject(false);\n                }\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var FollowingIconButton = function FollowingIconButton(_ref) {\n    var navigation = _ref.navigation;\n\n    if (followingCurrentJob) {\n      return _jsx(Ionicons, {\n        name: \"star\",\n        size: 35,\n        onPress: function onPress() {\n          FollowingJob();\n        }\n      });\n    } else {\n      return _jsx(Ionicons, {\n        name: \"star-outline\",\n        size: 35,\n        onPress: function onPress() {\n          FollowingJob();\n        }\n      });\n    }\n  };\n\n  var confirmPopUp = function confirmPopUp() {\n    Alert.alert(\"Deleting Job\", \"Are you sure?\", [{\n      text: \"Cancel\"\n    }, {\n      text: \"I'm sure\",\n      onPress: function onPress() {\n        deleteJob();\n      }\n    }]);\n  };\n\n  var deleteJob = function deleteJob() {\n    fetch(APIServiceURL + \"/deleteJob\", {\n      headers: {\n        jobid: job._id\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        response.json().then(function (json) {\n          if (json.success) {\n            Toast.show(\"Delete Success!\", Toast.SHORT);\n            navigation.navigate(\"JobList\");\n          } else {\n            Toast.show(\"Delete Failed!\", Toast.SHORT);\n          }\n        });\n      } else {\n        Toast.show(\"Delete Failed!\", Toast.SHORT);\n      }\n    });\n  };\n\n  var JobAuthor = function JobAuthor(UserToken) {\n    return _regeneratorRuntime.async(function JobAuthor$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fetch(APIServiceURL + \"/getUser\", {\n                headers: {\n                  usertoken: UserToken\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  response.json().then(function (json) {\n                    if (json.success) {\n                      resolve(json.data.username);\n                    } else {\n                      reject(json.success);\n                    }\n                  });\n                } else {\n                  reject(false);\n                }\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"\" + decodeURIComponent(job.Title)\n      }), _jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Job Provider: \" + decodeURIComponent(job.Author)\n      }), _jsx(Text, {\n        style: {\n          fontSize: 26,\n          fontWeight: \"bold\"\n        },\n        children: \"\" + decodeURIComponent(job.Details)\n      }), _jsxs(View, {\n        style: styles.buttonView,\n        children: [showDelButton ? _jsx(Pressable, {\n          style: styles.delButton,\n          onPress: function onPress() {\n            confirmPopUp();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          })\n        }) : _jsx(Pressable, {\n          onPress: function _callee2() {\n            return _regeneratorRuntime.async(function _callee2$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.t0 = Linking;\n                    _context5.next = 3;\n                    return _regeneratorRuntime.awrap(getJobAuthorEmailByAuthorID(job.AuthorID));\n\n                  case 3:\n                    _context5.t1 = _context5.sent;\n                    _context5.t2 = \"mailto:\" + _context5.t1;\n                    return _context5.abrupt(\"return\", _context5.t0.openURL.call(_context5.t0, _context5.t2));\n\n                  case 6:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          style: styles.emailButton,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"\\uD83D\\uDCEE\"\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            navigation.navigate(\"Notes List\", {\n              navigation: navigation\n            }, job);\n          },\n          style: styles.forwardsButton,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Forward To Notes\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"#406E9F\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  delButton: {\n    margin: 1,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"red\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  forwardsButton: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"green\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  emailButton: {\n    margin: 5,\n    padding: 10,\n    paddingLeft: 20,\n    paddingRight: 20,\n    backgroundColor: \"purple\",\n    borderRadius: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/navigation/screens/JobDetails.js"],"names":["React","useEffect","useState","useNavigation","Toast","Ionicons","AuthContext","JobDetails","item","navigation","useContext","getUserToken","getUserData","getAPIServiceURL","UserToken","UserData","APIServiceURL","showDelButton","setShowDelButton","followingCurrentJob","setFollowingCurrentJob","fetching","job","route","params","FollowingJob","fetch","headers","user_id","_id","job_id","then","response","status","json","success","show","SHORT","console","log","finally","checkFollowing","JobAuthor","User","Author","setOptions","title","decodeURIComponent","Title","headerRight","getJobAuthorEmailByAuthorID","author_id","Promise","resolve","reject","email","FollowingIconButton","confirmPopUp","Alert","alert","text","onPress","deleteJob","jobid","navigate","usertoken","data","username","fontSize","fontWeight","textAlign","Details","styles","buttonView","delButton","buttonText","Linking","AuthorID","openURL","emailButton","forwardsButton","StyleSheet","create","center","flex","justifyContent","alignItems","button","margin","padding","paddingLeft","paddingRight","backgroundColor","borderRadius","color","flexDirection","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Button,\r\n    Alert,\r\n    Linking,\r\n    SafeAreaView,\r\n    ScrollView,\r\n    Pressable,\r\n} from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Toast from \"react-native-simple-toast\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport { AuthContext } from \"../../components/context\";\r\n\r\nexport default function JobDetails(item) {\r\n    const navigation = useNavigation();\r\n    const { getUserToken, getUserData, getAPIServiceURL } =\r\n        React.useContext(AuthContext);\r\n    const UserToken = getUserToken();\r\n    const UserData = getUserData();\r\n    const APIServiceURL = getAPIServiceURL();\r\n    const [showDelButton, setShowDelButton] = useState(false);\r\n    const [followingCurrentJob, setFollowingCurrentJob] = useState(false);\r\n    let fetching = false;\r\n    let job = item.route.params;\r\n\r\n    const FollowingJob = () => {\r\n        if (fetching) {\r\n            return;\r\n        }\r\n        fetching = true;\r\n        if (followingCurrentJob) {\r\n            fetch(`${APIServiceURL}/unfollowJob`, {\r\n                headers: {\r\n                    user_id: UserData._id,\r\n                    job_id: job._id,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        response.json().then((json) => {\r\n                            if (json.success) {\r\n                                setFollowingCurrentJob(false);\r\n                                Toast.show(\"Unfollowed!\", Toast.SHORT);\r\n                            } else {\r\n                                console.log(\"failed!\");\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    fetching = false;\r\n                });\r\n        } else {\r\n            fetching = true;\r\n            fetch(`${APIServiceURL}/followJob`, {\r\n                headers: {\r\n                    user_id: UserData._id,\r\n                    job_id: job._id,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        response.json().then((json) => {\r\n                            if (json.success) {\r\n                                setFollowingCurrentJob(true);\r\n                                Toast.show(\"Followed!\", Toast.SHORT);\r\n                            } else {\r\n                                console.log(\"failed!\");\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    fetching = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    const checkFollowing = async () => {\r\n        fetching = true;\r\n        fetch(`${APIServiceURL}/checkFollowing`, {\r\n            headers: {\r\n                user_id: UserData._id,\r\n                job_id: job._id,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    response.json().then((json) => {\r\n                        if (json.success) {\r\n                            setFollowingCurrentJob(true);\r\n                        } else {\r\n                            setFollowingCurrentJob(false);\r\n                        }\r\n                    });\r\n                } else {\r\n                    setFollowingCurrentJob(false);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                fetching = false;\r\n            });\r\n    };\r\n\r\n    useEffect(async () => {\r\n        const User = await JobAuthor(UserToken);\r\n        if (User === job.Author) {\r\n            setShowDelButton(true);\r\n        }\r\n        checkFollowing();\r\n        navigation.setOptions({\r\n            title: decodeURIComponent(decodeURIComponent(job.Title)),\r\n            // headerLeft: null,\r\n            headerRight: () => <FollowingIconButton navigation={navigation} />,\r\n        });\r\n    });\r\n\r\n    const getJobAuthorEmailByAuthorID = async (author_id) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`${APIServiceURL}/getJobAuthorEmail`, {\r\n                headers: {\r\n                    author_id: author_id,\r\n                },\r\n            }).then((response) => {\r\n                if (response.status === 200) {\r\n                    response.json().then((json) => {\r\n                        if (json.success) {\r\n                            resolve(json.email);\r\n                        } else {\r\n                            reject(json.success);\r\n                        }\r\n                    });\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    const FollowingIconButton = ({ navigation }) => {\r\n        if (followingCurrentJob) {\r\n            return (\r\n                <Ionicons\r\n                    name=\"star\"\r\n                    size={35}\r\n                    onPress={() => {\r\n                        FollowingJob();\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Ionicons\r\n                    name=\"star-outline\"\r\n                    size={35}\r\n                    onPress={() => {\r\n                        FollowingJob();\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    //#TODO: Add Job Modification Functionality if Author is the same as the logged in user\r\n\r\n    //#DONE: Add Job follow/unfollow functionality\r\n\r\n    //#TODO: Add Button to Add Notes for current job offer\r\n\r\n    const confirmPopUp = () => {\r\n        Alert.alert(\"Deleting Job\", \"Are you sure?\", [\r\n            {\r\n                text: \"Cancel\",\r\n            },\r\n            {\r\n                text: \"I'm sure\",\r\n                onPress: () => {\r\n                    deleteJob();\r\n                },\r\n            },\r\n        ]);\r\n    };\r\n    const deleteJob = () => {\r\n        fetch(`${APIServiceURL}/deleteJob`, {\r\n            headers: {\r\n                jobid: job._id,\r\n            },\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then((json) => {\r\n                    if (json.success) {\r\n                        Toast.show(\"Delete Success!\", Toast.SHORT);\r\n                        navigation.navigate(\"JobList\");\r\n                    } else {\r\n                        Toast.show(\"Delete Failed!\", Toast.SHORT);\r\n                    }\r\n                });\r\n            } else {\r\n                Toast.show(\"Delete Failed!\", Toast.SHORT);\r\n            }\r\n        });\r\n    };\r\n    const JobAuthor = async (UserToken) => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`${APIServiceURL}/getUser`, {\r\n                headers: {\r\n                    usertoken: UserToken,\r\n                },\r\n            }).then((response) => {\r\n                if (response.status === 200) {\r\n                    response.json().then((json) => {\r\n                        if (json.success) {\r\n                            resolve(json.data.username);\r\n                        } else {\r\n                            reject(json.success);\r\n                        }\r\n                    });\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView>\r\n            <ScrollView>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    {`${decodeURIComponent(job.Title)}`}\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    {`Job Provider: ${decodeURIComponent(job.Author)}`}\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 26,\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                >\r\n                    {`${decodeURIComponent(job.Details)}`}\r\n                </Text>\r\n                <View style={styles.buttonView}>\r\n                    {showDelButton ? (\r\n                        <Pressable\r\n                            style={styles.delButton}\r\n                            onPress={() => {\r\n                                confirmPopUp();\r\n                            }}\r\n                        >\r\n                            <Text style={styles.buttonText}>🗑️</Text>\r\n                        </Pressable>\r\n                    ) : (\r\n                        <Pressable\r\n                            onPress={async () =>\r\n                                Linking.openURL(\r\n                                    `mailto:${await getJobAuthorEmailByAuthorID(\r\n                                        job.AuthorID\r\n                                    )}`\r\n                                )\r\n                            }\r\n                            style={styles.emailButton}\r\n                        >\r\n                            <Text style={styles.buttonText}>📮</Text>\r\n                        </Pressable>\r\n                    )}\r\n\r\n                    <Pressable\r\n                        onPress={() => {\r\n                            navigation.navigate(\r\n                                \"Notes List\",\r\n                                { navigation },\r\n                                job\r\n                            );\r\n                        }}\r\n                        style={styles.forwardsButton}\r\n                    >\r\n                        <Text style={styles.buttonText}>Forward To Notes</Text>\r\n                    </Pressable>\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"#406E9F\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonText: {\r\n        color: \"#fff\",\r\n        fontSize: 15,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    delButton: {\r\n        margin: 1,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"red\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    forwardsButton: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"green\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    emailButton: {\r\n        margin: 5,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        backgroundColor: \"purple\",\r\n        borderRadius: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonView: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        marginTop: 20,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}