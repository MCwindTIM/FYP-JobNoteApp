{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 22\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});\n\nvar JobFlatList = function JobFlatList() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch(\"http://223.16.12.55:3000/getAllJobData\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: data.data,\n      keyExtractor: function keyExtractor(_ref, index) {\n        var _id = _ref._id;\n        return id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Text, {\n          style: styles.item,\n          children: item.Title + \". \" + item.Author\n        });\n      },\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: isLoading,\n        onRefresh: function onRefresh() {\n          setLoading(true);\n          useEffect();\n        }\n      })\n    })\n  });\n};\n\nexport default JobFlatList;","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/navigation/util/FlatList.js"],"names":["React","useEffect","useState","styles","StyleSheet","create","container","flex","paddingTop","item","padding","fontSize","height","JobFlatList","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","index","_id","id","Title","Author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADkB;AAK7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,EADP;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,MAAM,EAAE;AAHN;AALuB,CAAlB,CAAf;;AAYA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,wBAAgCb,KAAK,CAACE,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,UAAlB;;AACA,kBAAwBb,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAFV,EAGKC,KAHL,CAGW,UAACC,KAAD;AAAA,aAAWP,OAAO,CAACO,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHX,EAIKC,OAJL,CAIa;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJb;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACG,SAApB;AAAA,cACI,KAAC,QAAD;AACI,MAAA,IAAI,EAAEU,IAAI,CAACA,IADf;AAEI,MAAA,YAAY,EAAE,4BAAUW,KAAV;AAAA,YAAGC,GAAH,QAAGA,GAAH;AAAA,eAAoBC,EAApB;AAAA,OAFlB;AAGI,MAAA,UAAU,EAAE;AAAA,YAAGpB,IAAH,SAAGA,IAAH;AAAA,eACR,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACM,IAApB;AAAA,oBACKA,IAAI,CAACqB,KAAL,GAAa,IAAb,GAAoBrB,IAAI,CAACsB;AAD9B,UADQ;AAAA,OAHhB;AAQI,MAAA,cAAc,EACV,KAAC,cAAD;AACI,QAAA,UAAU,EAAEjB,SADhB;AAEI,QAAA,SAAS,EAAE,qBAAM;AACbC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAd,UAAAA,SAAS;AACZ;AALL;AATR;AADJ,IADJ;AAsBH,CAnCD;;AAqCA,eAAeY,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, StyleSheet, Text, View } from \"react-native\";\r\nimport { RefreshControl } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingTop: 22,\r\n    },\r\n    item: {\r\n        padding: 10,\r\n        fontSize: 18,\r\n        height: 44,\r\n    },\r\n});\r\n\r\nconst JobFlatList = () => {\r\n    const [isLoading, setLoading] = React.useState(true);\r\n    const [data, setData] = useState([]);\r\n    console.log(data);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://223.16.12.55:3000/getAllJobData\")\r\n            .then((response) => response.json())\r\n            .then((json) => setData(json))\r\n            .catch((error) => console.error(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                data={data.data}\r\n                keyExtractor={({ _id }, index) => id}\r\n                renderItem={({ item }) => (\r\n                    <Text style={styles.item}>\r\n                        {item.Title + \". \" + item.Author}\r\n                    </Text>\r\n                )}\r\n                refreshControl={\r\n                    <RefreshControl\r\n                        refreshing={isLoading}\r\n                        onRefresh={() => {\r\n                            setLoading(true);\r\n                            useEffect();\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default JobFlatList;\r\n"]},"metadata":{},"sourceType":"module"}