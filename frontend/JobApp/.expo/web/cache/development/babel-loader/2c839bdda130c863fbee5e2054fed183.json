{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar detailsName = \"Details\";\nvar settingsName = \"Settings\";\nvar Tab = createBottomTabNavigator();\nexport default function MainContainer() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n\n            if (rn === homeName) {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (rn === detailsName) {\n              iconName = focused ? \"list\" : \"list-outline\";\n            } else if (rn === settingsName) {\n              iconName = focused ? \"settings\" : \"settings-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: detailsName,\n        component: DetailsScreen\n      }), _jsx(Tab.Screen, {\n        name: settingsName,\n        component: SettingsScreen\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/navigation/MainContainer.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","DetailsScreen","SettingsScreen","homeName","detailsName","settingsName","Tab","MainContainer","route","tabBarIcon","focused","color","size","iconName","rn","name"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AAGA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;;;AAGA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,WAAW,GAAG,SAApB;AACA,IAAMC,YAAY,GAAG,UAArB;AAEA,IAAMC,GAAG,GAAGR,wBAAwB,EAApC;AAEA,eAAe,SAASS,aAAT,GAAyB;AACpC,SACI,KAAC,mBAAD;AAAA,cACI,MAAC,GAAD,CAAK,SAAL;AACI,MAAA,gBAAgB,EAAEJ,QADtB;AAEI,MAAA,aAAa,EAAE;AAAA,YAAGK,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC3BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACtC,gBAAIC,QAAJ;AACA,gBAAIC,EAAE,GAAGN,KAAK,CAACO,IAAf;;AAEA,gBAAID,EAAE,KAAKX,QAAX,EAAqB;AACjBU,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACH,aAFD,MAEO,IAAII,EAAE,KAAKV,WAAX,EAAwB;AAC3BS,cAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACH,aAFM,MAEA,IAAII,EAAE,KAAKT,YAAX,EAAyB;AAC5BQ,cAAAA,QAAQ,GAAGH,OAAO,GACZ,UADY,GAEZ,kBAFN;AAGH;;AAED,mBACI,KAAC,QAAD;AACI,cAAA,IAAI,EAAEG,QADV;AAEI,cAAA,IAAI,EAAED,IAFV;AAGI,cAAA,KAAK,EAAED;AAHX,cADJ;AAOH;AAtB0B,SAAhB;AAAA,OAFnB;AAAA,iBA2BI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAER,QAAlB;AAA4B,QAAA,SAAS,EAAEH;AAAvC,QA3BJ,EA4BI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,WAAlB;AAA+B,QAAA,SAAS,EAAEH;AAA1C,QA5BJ,EA6BI,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAEI,YAAlB;AAAgC,QAAA,SAAS,EAAEH;AAA3C,QA7BJ;AAAA;AADJ,IADJ;AAmCH","sourcesContent":["import * as React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\n//Screens\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport DetailsScreen from \"./screens/DetailsScreen\";\r\nimport SettingsScreen from \"./screens/SettingsScreen\";\r\n\r\n//Screen names\r\nconst homeName = \"Home\";\r\nconst detailsName = \"Details\";\r\nconst settingsName = \"Settings\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function MainContainer() {\r\n    return (\r\n        <NavigationContainer>\r\n            <Tab.Navigator\r\n                initialRouteName={homeName}\r\n                screenOptions={({ route }) => ({\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName;\r\n                        let rn = route.name;\r\n\r\n                        if (rn === homeName) {\r\n                            iconName = focused ? \"home\" : \"home-outline\";\r\n                        } else if (rn === detailsName) {\r\n                            iconName = focused ? \"list\" : \"list-outline\";\r\n                        } else if (rn === settingsName) {\r\n                            iconName = focused\r\n                                ? \"settings\"\r\n                                : \"settings-outline\";\r\n                        }\r\n\r\n                        return (\r\n                            <Ionicons\r\n                                name={iconName}\r\n                                size={size}\r\n                                color={color}\r\n                            />\r\n                        );\r\n                    },\r\n                })}\r\n            >\r\n                <Tab.Screen name={homeName} component={HomeScreen} />\r\n                <Tab.Screen name={detailsName} component={DetailsScreen} />\r\n                <Tab.Screen name={settingsName} component={SettingsScreen} />\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}