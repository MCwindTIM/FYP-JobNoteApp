{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"description\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TextInput as Input } from \"react-native-paper\";\nimport { theme } from \"../Core/Theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SearchBar(_ref) {\n  var description = _ref.description,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  return _jsx(Input, _objectSpread({\n    style: styles.textInput,\n    selectionColor: theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\",\n    value: searchText,\n    onChangeText: function onChangeText(text) {\n      return setSearchText(text);\n    }\n  }, props));\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    height: 40,\n    width: Platform !== \"ios\" ? \"90%\" : \"100%\",\n    marginLeft: \"1%\",\n    marginRight: \"1%\",\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"sources":["D:/VTC files/Github/Assignment/fyp/ReactNative/JobApp/components/SearchBar.js"],"names":["React","useState","TextInput","Input","theme","SearchBar","description","props","searchText","setSearchText","styles","textInput","colors","primary","text","StyleSheet","create","height","width","Platform","marginLeft","marginRight","backgroundColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;AAEA,eAAe,SAASC,SAAT,OAA8C;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAATC,KAAS;;AACzD,kBAAoCN,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,SACI,KAAC,KAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACC,SADlB;AAEI,IAAA,cAAc,EAAEP,KAAK,CAACQ,MAAN,CAAaC,OAFjC;AAGI,IAAA,cAAc,EAAC,aAHnB;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAEL,UALX;AAMI,IAAA,YAAY,EAAE,sBAACM,IAAD;AAAA,aAAUL,aAAa,CAACK,IAAD,CAAvB;AAAA;AANlB,KAOQP,KAPR,EADJ;AAWH;AAED,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,KAAK,EAAEC,QAAQ,KAAK,KAAb,GAAqB,KAArB,GAA6B,MAF7B;AAGPC,IAAAA,UAAU,EAAE,IAHL;AAIPC,IAAAA,WAAW,EAAE,IAJN;AAKPC,IAAAA,eAAe,EAAE;AALV;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Platform,\r\n} from \"react-native\";\r\nimport { TextInput as Input } from \"react-native-paper\";\r\nimport { theme } from \"../Core/Theme\";\r\n\r\nexport default function SearchBar({ description, ...props }) {\r\n    const [searchText, setSearchText] = useState(\"\");\r\n\r\n    return (\r\n        <Input\r\n            style={styles.textInput}\r\n            selectionColor={theme.colors.primary}\r\n            underlineColor=\"transparent\"\r\n            mode=\"outlined\"\r\n            value={searchText}\r\n            onChangeText={(text) => setSearchText(text)}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        height: 40,\r\n        width: Platform !== \"ios\" ? \"90%\" : \"100%\",\r\n        marginLeft: \"1%\",\r\n        marginRight: \"1%\",\r\n        backgroundColor: \"#fff\",\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}